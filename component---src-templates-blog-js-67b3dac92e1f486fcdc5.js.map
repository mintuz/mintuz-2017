{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["NavLink","props","test","text","to","url","BlogList","renderPagination","group","index","first","last","pageCount","previousUrl","toString","nextUrl","className","getPageUrl","siteUrl","render","this","data","site","siteMetadata","siteTitle","description","keywords","blogListingTitle","blogListingUrl","pathContext","headProps","title","Fragment","mode","map","post","key","node","frontmatter","path","dangerouslySetInnerHTML","__html","excerpt","href","React","Component","pageQuery"],"mappings":"sQASA,IAAMA,EAAU,SAAAC,GACd,OAAKA,EAAMC,KAGF,8BAAOD,EAAME,MAFb,kBAAC,IAAD,CAAMC,GAAIH,EAAMI,KAAMJ,EAAME,OAMjCG,E,wLAEJC,iBAAA,YAA2D,EAAxCC,MAAyC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UAEtCC,EAAcJ,EAAQ,GAAM,EAAI,QAAlB,UAAsCA,EAAQ,GAAGK,WAC/DC,EAAO,UAAaN,EAAQ,GAAGK,WAErC,OAAIF,EAAY,EAEZ,yBAAKI,UAAU,gBACb,yBAAKA,UAAU,+DACb,kBAAChB,EAAD,CAASE,KAAMQ,EAAOL,IAAKQ,EAAaV,KAAK,mBAE/C,yBAAKa,UAAU,2DACb,kBAAChB,EAAD,CAASE,KAAMS,EAAMN,IAAKU,EAASZ,KAAK,gBAO9C,oC,EAIJc,WAAA,YAA8D,EAAjDT,MAAkD,IAA3CC,EAA0C,EAA1CA,MAAoBG,GAAsB,EAAnCF,MAAmC,EAA5BC,KAA4B,EAAtBC,WAAWM,EAAW,EAAXA,QACjD,OAAGN,EAAY,EACHM,EAAV,SAA0BT,EAGlBS,EAAV,S,EAGFC,OAAA,WAAU,IAAD,EAOHC,KAAKnB,MAAMoB,KAAKC,KAAKC,aAJvBC,EAHK,EAGLA,UACAN,EAJK,EAILA,QACAO,EALK,EAKLA,YACAC,EANK,EAMLA,SAGIC,EAAgB,gBAAmBH,EACnCI,EAAiBR,KAAKH,WAAL,iBAAoBG,KAAKnB,MAAM4B,YAA/B,CAA4CX,aAC3DV,EAAUY,KAAKnB,MAAM4B,YAArBrB,MAEFsB,EAAY,CAChBC,MAAOJ,EACPD,WACAD,cACAP,QAASU,GAGX,OACE,kBAAC,IAAMI,SAAP,KACE,kBAAC,IAASF,GACV,kBAAC,IAAD,CAAQG,KAAM,UAAWF,MAAM,eAC/B,yBAAKf,UAAU,iBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,uDACZR,EAAM0B,KAAI,SAACC,GAAD,OACT,6BAASC,IAAKD,EAAKE,KAAKC,YAAYC,KAAMvB,UAAU,wBAClD,wBAAIA,UAAU,4BACZ,kBAAC,IAAD,CAAMZ,GAAI+B,EAAKE,KAAKC,YAAYC,KAAMvB,UAAU,8BAC7CmB,EAAKE,KAAKC,YAAYP,QAG3B,uBAAGS,wBAAyB,CAAEC,OAAQN,EAAKE,KAAKK,eAGnDtB,KAAKb,iBAAiBa,KAAKnB,MAAM4B,cAEpC,yBAAKb,UAAU,yEACX,6BACI,uBAAG2B,KAAK,gBAAgB3B,UAAU,+EAAlC,uB,GA3EL4B,IAAMC,WA0FdvC,YAER,IAAMwC,EAAS","file":"component---src-templates-blog-js-67b3dac92e1f486fcdc5.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Head from '../components/head';\nimport Header from '../components/header';\n\nconst NavLink = props => {\n  if (!props.test) {\n    return <Link to={props.url}>{props.text}</Link>;\n  } else {\n    return <span>{props.text}</span>;\n  }\n};\n\nclass BlogList extends React.Component {\n\n  renderPagination({ group, index, first, last, pageCount }) {\n\n    const previousUrl = index - 1 === 1 ? \"/blog\" : `/blog/${(index - 1).toString()}`;\n    const nextUrl = `/blog/${(index + 1).toString()}`;\n\n    if (pageCount > 1) {\n      return (\n        <div className=\"c-pagination\">\n          <div className=\"c-pagination__previous o-btn o-btn--large o-btn--light-gray\">\n            <NavLink test={first} url={previousUrl} text=\"Previous Page\" />\n          </div>\n          <div className=\"c-pagination__next o-btn o-btn--large o-btn--light-gray\">\n            <NavLink test={last} url={nextUrl} text=\"Next Page\" />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <noscript />\n    );\n  }\n\n  getPageUrl({ group, index, first, last, pageCount, siteUrl }) {\n    if(pageCount > 1) {\n      return `${siteUrl}/blog/${index}`;\n    }\n\n    return `${siteUrl}/blog`;\n  }\n\n  render() {\n\n    const {\n      siteTitle,\n      siteUrl,\n      description,\n      keywords\n    } = this.props.data.site.siteMetadata;\n\n    const blogListingTitle = `Blog Posts | ${siteTitle}`;\n    const blogListingUrl = this.getPageUrl({...this.props.pathContext, siteUrl});\n    const { group } = this.props.pathContext;\n\n    const headProps = {\n      title: blogListingTitle,\n      keywords,\n      description,\n      siteUrl: blogListingUrl\n    }\n\n    return (\n      <React.Fragment>\n        <Head {...headProps} />\n        <Header mode={'compact'} title=\"Blog Posts\" />\n        <div className=\"o-main u-pv++\">\n            <div className=\"o-wrap\">\n                <div className=\"o-grid\">\n                    <div className=\"o-grid__col o-grid__col--1/1 o-grid__col--2/3@bp-mx\">\n                      {group.map((post) => (\n                        <article key={post.node.frontmatter.path} className=\"o-article-list__item\">\n                          <h2 className=\"u-type-double-pica u-mb+\">\n                            <Link to={post.node.frontmatter.path} className=\"o-article-list__item-title\">\n                              {post.node.frontmatter.title}\n                            </Link>\n                          </h2>\n                          <p dangerouslySetInnerHTML={{ __html: post.node.excerpt }} />\n                        </article>\n                      ))}\n                      {this.renderPagination(this.props.pathContext)}\n                    </div>\n                    <div className=\"o-grid__col o-grid__col--1/1 o-grid__col--1/3@bp-mx u-mt+ u-mt0@bp-mx\">\n                        <div>\n                            <a href=\"/get-in-touch\" className=\"o-btn o-btn--large o-btn--block o-btn--light-gray u-text-align-center u-mb+\">Get in touch</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nBlogList.propTypes = {\n  route: PropTypes.object\n};\n\nexport default BlogList;\n\nexport const pageQuery = graphql`\n  query BlogQuery {\n    site {\n      siteMetadata {\n        siteTitle\n        siteTitlePrefix\n        googleVerification\n        locale\n        siteUrl\n        author\n        keywords\n        description\n        twitterHandle\n      }\n    }\n  }\n`\n"],"sourceRoot":""}