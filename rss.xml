<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Untitled RSS Feed]]></title><description><![CDATA[Software Engineer from Manchester writing posts on CSS, React, JavaScript and Web Performance.]]></description><link>https:/next.mintuz.com</link><generator>RSS for Node</generator><lastBuildDate>Thu, 07 Jun 2018 15:55:07 GMT</lastBuildDate><item><title><![CDATA[React Europe Conf 2016]]></title><description><![CDATA[I had a great time at React Europe Conf 2016 and thought I would share some of my opinions and things that stood out from the conference…]]></description><link>https:/next.mintuz.com/2016/06/05/react-europe-2016</link><guid isPermaLink="false">https:/next.mintuz.com/2016/06/05/react-europe-2016</guid><pubDate>Sun, 05 Jun 2016 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;I had a great time at React Europe Conf 2016 and thought I would share some of my opinions and things that stood out from the conference.&lt;/p&gt;
&lt;h2&gt;GraphQL &lt;del&gt;vs&lt;/del&gt; and Falcor&lt;/h2&gt;
&lt;p&gt;I’ve heard of both these frameworks for retrieving data from the server but I’ve never really understood the benefits by just viewing the documentation. After seeing both these frameworks I can honestly see the advantages of using both. Having the ability to retrieve data from the server without specifying a REST endpoint is amazing, it allows you to scale your data model easily.&lt;/p&gt;
&lt;p&gt;The talk by Jafar Husain “Falcor: One Model Everywhere” demonstrated the way Falcor does it really well. He also gives credit to GraphQL saying both frameworks have a place in the ecosystem and picking the best one is subjective to your requirements. My take from his talk is that Falcor is better for smaller applications where the data model is known and that you should use GraphQL where the model may change and need to scale.&lt;/p&gt;
&lt;p&gt;Falcor is less prescriptive, has fewer concepts and a smaller file size &amp;#x3C; 50%. It takes a segment of the model you defined and returns it from the data source. I have a few questions around how this works with a real database because the demo was using a JSON file but it’s something I am going to investigate, now I’ve seen it in action.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2016/06/CkBxU1nVEAAP8Ld.jpg&quot; alt=&quot;CkBxU1nVEAAP8Ld&quot;&gt;&lt;/p&gt;
&lt;p&gt;The talk by Laney Kuenzel and Lee Byron named “GraphQL Future” was a nice insight into the ways Facebook use GraphQL and what they have planned for it in the future. They talk a little bit about the different experiments they are running with GraphQL and working on the BBC LIVE product I can really see how the directive @live in GraphQL will change the future of real time updates in applications. For their demo’s they also used &lt;a href=&quot;https://github.com/graphql/graphiql&quot;&gt;graphiql&lt;/a&gt; which looks really cool for testing out your graphQL queries.&lt;/p&gt;
&lt;p&gt;Both talks were really well executed and two of the best talks at React Europe Conf 2016.&lt;/p&gt;
&lt;h2&gt;Carte Blanche&lt;/h2&gt;
&lt;p&gt;The Evolution of React UI Development by Max Stoiber and Nik Graf stole the show for me. With the announcement of &lt;a href=&quot;https://github.com/carteb/carte-blanche&quot;&gt;carte-blanche&lt;/a&gt; , a tool to help you see components individually, explore them in different states, and quickly develop them confidently will really change my development workflow. Honestly check this out, having a dependency tree with loads of components is a pain when you want to quickly develop, it may mean you have to npm link your dependency tree but with carte-blanche that’s no longer necessary.&lt;/p&gt;
&lt;h2&gt;A Deep dive into things…&lt;/h2&gt;
&lt;p&gt;Oh my god, these talks! The subjects were around the inner workings of React Native and Flow and how they’ve been optimised. Most developers probably don’t care about this and to be honest shouldn’t care.  It may have been just me but this much information at a conference can be overwhelming. I think the picture below demonstrates how intense it got. Talks should be composed of quick and snappy bit’s of information which can easily be digested. Then again I may be just stupid because people on Twitter seemed to have enjoy the talks.&lt;/p&gt;
&lt;p&gt;I am however going to re-watch these talks to make sure it wasn’t just the long day that caused me to feel overwhelmed. I’m sure there’s some value in these talks I just couldn’t see it on the day.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2016/06/CkAejpiUYAEvOOg.jpg&quot; alt=&quot;CkAejpiUYAEvOOg&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Redux Analytics&lt;/h2&gt;
&lt;p&gt;Before this talk I didn’t really think about how much of a pain it is to set up analytics in an application but my general approach was to hook into some sort of event such as a click event and then send some data from the client to the server. Bertrand Karerangabo and Evan Schultz demonstrated a neat way of using redux middleware to track analytics without much configuration. Because Redux uses a single store and provides a single location for state changes, their middleware hooks into the redux event loop and its from there we can learn a lot about a user and what current state the application is in. So simple but so powerful that until this point I had overlooked the possibilities of using Redux for analytics.&lt;/p&gt;
&lt;h2&gt;Lightning Talks&lt;/h2&gt;
&lt;p&gt;Phil Holden, you were a beast. demonstrating &lt;a href=&quot;https://github.com/philholden/redux-swarmlog&quot;&gt;redux-swarmlog&lt;/a&gt;. A super simple way of writing distributed Redux applications. The &lt;a href=&quot;https://github.com/reactjs/redux&quot;&gt;Redux&lt;/a&gt; action log is persisted in an IndexDB and synced with other peers via a &lt;a href=&quot;https://github.com/mafintosh/webrtc-swarm&quot;&gt;WebRTC Swarm&lt;/a&gt; using &lt;a href=&quot;https://github.com/substack/swarmlog&quot;&gt;Swarmlog&lt;/a&gt;. (honestly didn’t just copy and paste that from the README file :P)&lt;/p&gt;
&lt;p&gt;Ken Wheeler demonstrated &lt;a href=&quot;https://github.com/FormidableLabs/victory&quot;&gt;Victory&lt;/a&gt;, a cross platform charting library. I’ve been looking for a charting library for a while and this will definitely be used in my new application I am writing in React Native.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I had an amazing time at React Europe 2016 and certainly recommend going next year if you can. Lots of insight, Lots of swag and great atmosphere. Now it’s time to play with all these new toys. I’m looking at you &lt;a href=&quot;https://github.com/carteb/carte-blanche&quot;&gt;carte-blanche&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Composable React Components]]></title><description><![CDATA[Hello in this blog post I want to talk about a problem I have recently had within the BBC Live team and how we solved it. To begin with I…]]></description><link>https:/next.mintuz.com/2016/05/19/composable-react-components</link><guid isPermaLink="false">https:/next.mintuz.com/2016/05/19/composable-react-components</guid><pubDate>Thu, 19 May 2016 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;Hello in this blog post I want to talk about a problem I have recently had within the BBC Live team and how we solved it. To begin with I should probably give you a little bit of context to the problem.&lt;/p&gt;
&lt;p&gt;I joined the BBC Homepage team at the end of 2014, at the same time ReactJS was really gaining traction within the web development community and people were releasing reusable components through npm. Awesome I thought… All these free components to use for my own use, I wonder if I could do something similar within the BBC because we have a &lt;a href=&quot;http://www.bbc.co.uk/gel/guidelines/promos&quot;&gt;Promo&lt;/a&gt; design pattern which is used all over the BBC implemented by different teams in different languages.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2016/05/promo.png&quot; alt=&quot;promo&quot;&gt;&lt;/p&gt;
&lt;p&gt;This obviously leads to loads of code duplication and the same bugs/challenges will occur.&lt;/p&gt;
&lt;h2&gt;Old Approach&lt;/h2&gt;
&lt;p&gt;The first iteration of the promo component I worked on was tightly coupled to the homepage codebase. The homepage codebase is comprised of several different modules, for example we have a top stories module and a tv radio module. Both modules make use of the promo design pattern. However the data for each module is passed down and it’s the modules responsibility to build the DOM for the Promo.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/mintuz/5f756c3e63767a5d8ab69ee36ec6ef63#file-top-down-approach-jsx&quot;&gt;https://gist.github.com/mintuz/5f756c3e63767a5d8ab69ee36ec6ef63#file-top-down-approach-jsx&lt;/a&gt; The problem with this approach is that it’s not very configurable and if the UX guys fancy changing the visual look of one of the promos, maybe for an important event or if it’s a breaking news item then it means passing more data into the module and having a bunch of conditionals to add custom CSS classes and we might need to change the markup slightly as well.&lt;/p&gt;
&lt;p&gt;This approach works well for the homepage because it’s not got many promo variants so it doesn’t need granular control over a promos DOM structure and CSS classes. This isn’t to say the homepage isn’t complicated but there wasn’t a need to over engineer a solution that would work for multiple use cases.&lt;/p&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;So fast forward to 2016 and I am now apart of the BBC Live team which is responsible for Live Pages, Live Guide and Live Promo products. Each product makes use of the promo design pattern but the use cases are slightly different. The Live Page is mainly concerned with the 4th promo variant in the mock up above and the Live Promo uses the same variant but at smaller screen sizes, the content overlays the image and gains a transparent gradient. There are loads of similarities between both promo styles so we needed a way to share code so we didn’t end up duplicating code.&lt;/p&gt;
&lt;h2&gt;Solution - How to make composable React components&lt;/h2&gt;
&lt;p&gt;By the time we reached this problem, I had been playing around with React Native and had gotten used to the idea of using &lt;a href=&quot;https://facebook.github.io/react/tips/children-props-type.html&quot;&gt;this.props.children&lt;/a&gt; to make components composable. It allows you to nest components as you would with DOM elements and allows each component to handle it’s own use cases, preventing one component doing everything.&lt;/p&gt;
&lt;p&gt;Another benefit of building components like this is that we can make each element within the promo a separate npm package making it reusable and useful by itself. If we use the this.props.children property correctly it also allows us to cut down on our dependency tree bringing in all our dependencies at the same point and not having components requiring components.&lt;/p&gt;
&lt;p&gt;Variant 4 may look a little something like this in the code using this approach.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/mintuz/5f756c3e63767a5d8ab69ee36ec6ef63#file-composable-approach-1-jsx&quot;&gt;https://gist.github.com/mintuz/5f756c3e63767a5d8ab69ee36ec6ef63#file-composable-approach-1-jsx&lt;/a&gt; The same promo may look a little something like this if we want the content to overlay the image at a certain breakpoint. The great thing about this.props.children is it allows us to nest DOM elements and custom components, so you can add bits of code which are specific to your use case.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/mintuz/5f756c3e63767a5d8ab69ee36ec6ef63#file-composable-approach-2-jsx&quot;&gt;https://gist.github.com/mintuz/5f756c3e63767a5d8ab69ee36ec6ef63#file-composable-approach-2-jsx&lt;/a&gt; So these two examples use a lot of the promo elements available to us but what about when we have no image or we don’t care about tags. Suddenly we’ve created variant 1 (No image)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/mintuz/5f756c3e63767a5d8ab69ee36ec6ef63#file-composable-approach-basic-jsx&quot;&gt;https://gist.github.com/mintuz/5f756c3e63767a5d8ab69ee36ec6ef63#file-composable-approach-basic-jsx&lt;/a&gt; I hope this has demonstrated how powerful this.props.children can be and how it can help you build UI elements that are reusable and flexible enough to allow you to compose components and different variants of a component.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Dealing with a long commute]]></title><description><![CDATA[For the last year I have been doing 5 hours worth of commuting 5 days a week since changing my job and I’m finally at the point where I can…]]></description><link>https:/next.mintuz.com/2015/07/18/dealing-with-a-long-commute</link><guid isPermaLink="false">https:/next.mintuz.com/2015/07/18/dealing-with-a-long-commute</guid><pubDate>Sat, 18 Jul 2015 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;For the last year I have been doing 5 hours worth of commuting 5 days a week since changing my job and I’m finally at the point where I can finally cut down my journey to a more sane 40 minutes.&lt;/p&gt;
&lt;p&gt;Some days have been a struggle, some days have been pleasant, here are some things you can do to make your commute more pleasant.&lt;/p&gt;
&lt;h2&gt;Don’t rely on the transport service.&lt;/h2&gt;
&lt;p&gt;Transport systems will simply fuck up. If you follow me on Twitter or know me in real life you’ll know this is my biggest complaint. A certain northern rail company in the UK constantly failed to meet my needs and I had to find alternative routes home.&lt;/p&gt;
&lt;p&gt;What I’m trying to say is, always have a back up plan. Quite often my main route to and from work had delays so I had to have alternative routes home. These routes aren’t always advertised on websites / apps so a little bit of research will be required on your part.&lt;/p&gt;
&lt;h2&gt;Tell everyone&lt;/h2&gt;
&lt;p&gt;Tell your co-workers, friends and family that you are doing a long commute every day. They’ll be more understanding if you are late or grumpy. Too many things can happen on your commute and things are bound to piss you off or go wrong.&lt;/p&gt;
&lt;h2&gt;Prepare for weather&lt;/h2&gt;
&lt;p&gt;Weather is so unpredictable in the UK and because of the amount of distance between my home and work location, the weather can be completely different.&lt;/p&gt;
&lt;p&gt;I personally don’t like hoods so I also rock an umbrella for those rainy days. I also Pack a spare set of clothes in my bag, an extra pair of socks is always a good idea. Wearing damp clothes all day isn’t fun for you or others (imagine a wet dog smell in the office).&lt;/p&gt;
&lt;p&gt;For those hot days I would also recommend travel clothes and work clothes so you don’t have smelly clothes by the time you get to your destination. Also a water bottle is an essential.&lt;/p&gt;
&lt;h2&gt;Timebox your commute.&lt;/h2&gt;
&lt;p&gt;I can’t stress this point enough! If you imagine one massive commute, it’s going to feel like it’s taking forever. Cut it down into sections and for each section do something different. Which brings me onto my next point.&lt;/p&gt;
&lt;h2&gt;Do something&lt;/h2&gt;
&lt;p&gt;Don’t waste the time. If you go to sleep or simply listen to music, you are wasting a large chunk of the day which could be productive. Read blog posts, plan your day or develop. Whatever you do, make sure its productive.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If you can avoid a long commute, avoid it. I think one of the things that made it easier for me is I always knew it was short term. If its long term, I salute you because it will be a strain mentally and physically.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[A developers view on the Apple Watch]]></title><description><![CDATA[So I’ve been wearing my new Apple Watch 42mm stainless steel edition with a classic leather buckle for the last week and so far I am loving…]]></description><link>https:/next.mintuz.com/2015/06/13/a-developers-view-on-the-apple-watch</link><guid isPermaLink="false">https:/next.mintuz.com/2015/06/13/a-developers-view-on-the-apple-watch</guid><pubDate>Sat, 13 Jun 2015 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;So I’ve been wearing my new Apple Watch 42mm stainless steel edition with a classic leather buckle for the last week and so far I am loving it from a users perspective. From a developers point of view some improvements are needed but because it’s early days I have high hopes. Let’s begin. &lt;img src=&quot;/wp-content/uploads/2015/06/2015-06-08-18.54.24-768x1024.jpg&quot; alt=&quot;Apple Watch in case&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Looks&lt;/h2&gt;
&lt;p&gt;I love it, as with most apple devices designed by Jony Ive, he’s outdone himself and with support from Marc Newson, this watch feels and looks amazing. I’m not a fan of bulky watches or metal straps so I went for 42mm stainless steel classic leather buckle. The 38mm looked too small and I imagine it would be difficult to use, the 42mm even if it is slightly bigger isn’t too bulky for me and I recommend trying both on, before you buy one as I was set on getting the 38mm before trying the 42mm on. &lt;img src=&quot;/wp-content/uploads/2015/06/2015-06-08-19.05.14-225x300.jpg&quot; alt=&quot;2015-06-08 19.05.14&quot;&gt; As for the screen, the glare from the sun can be an issue whilst wearing sun glasses. I’ve also read somewhere that the issue is less with the sport edition but I can’t comment on that myself.&lt;/p&gt;
&lt;h2&gt;Security&lt;/h2&gt;
&lt;p&gt;A nice security feature on the Apple Watch is that if you take the watch off and you have the passcode enabled it will automatically lock. A subtle but useful feature.&lt;/p&gt;
&lt;p&gt;However security stops there. If you take the Apple Watch off and it gets stolen or someone manages to take your watch off without you realising, consider it lost. There is no way of tracking it as it is dependent on the phone. I guess Apple made this decision because putting WiFi/GPS directly onto the watch would drain the battery considerably.&lt;/p&gt;
&lt;p&gt;Also maybe not security related but you can also ping your iPhone directly from your phone. I’ve already used this feature twice since misplacing my phone.&lt;/p&gt;
&lt;h2&gt;Battery&lt;/h2&gt;
&lt;p&gt;Which brings me onto the battery life which is better than expected. With 18 hours expected battery life I wasn’t having high hopes but it turns out my Apple Watch battery lasts 1.5 days and that’s with moderate use. I know some people will still snigger at this, claiming traditional watches last years but lets be honest, its not a smart watch is it?&lt;/p&gt;
&lt;p&gt;My iPhone 6 battery life is however taking a bruising. Before I had my apple watch I was having problems with my battery. I use it a lot because of my daily commuting taking up 5 hours of my life so my battery used to die at 6pm. With the apple watch it’s dying around 3pm whilst I’m still working and just before I set off. Luckily I work around several mobile devices and people with cables so I can give it a boost but this is a killer at the moment. I presume this is because the Apple Watch is constantly sending data back to the iPhone and requesting data directly from the phone.&lt;/p&gt;
&lt;h2&gt;Third party apps&lt;/h2&gt;
&lt;p&gt;Other reviews of the Apple Watch tend to be very negative and I think it’s partly due to them focusing on third party apps. Third party apps don’t feel polished and because they are essentially beemed up to the Apple Watch, their can be lag whilst opening the app. I think this will get addressed in a later Watch OS revision and with native apps coming, the experience is only going to get better.&lt;/p&gt;
&lt;p&gt;I also think it’s going to solve issues with the dependency on the iPhone. Personally this isn’t an issue for me because I always have my phone but I understand the need for some users wanting to be detached from their iPhone. As for third party apps themselves, I’m using; Gero, trainline, Seven, Nike+, BBC News, Slack and Instagram. All of which I use daily and enjoy.&lt;/p&gt;
&lt;p&gt;I think it’s also worth noting that the built-in Message app is brilliant. Siri is amazing and I see myself interacting with Siri more often for sending texts. The voice detection is far superior on the Watch than the phone.&lt;/p&gt;
&lt;h2&gt;Taptic Engine&lt;/h2&gt;
&lt;p&gt;This is one of the best features of the Apple Watch. I love getting taptic feedback when I have a notification or when something needs my attention. Apple have been very clever and each type of action has a different taptic feedback. For example a notification has a different feedback to an alarm going off. I believe their are 8 different types of feedback and after a while the user is going to know the remember each one.&lt;/p&gt;
&lt;p&gt;I look forward to getting access to the taptic engine as a developer in WatchOS 2.0. Which brings me onto my next point…&lt;/p&gt;
&lt;h2&gt;WatchOS Development API&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;For non-developer users you can skip this section.&lt;/strong&gt; This is a major disappointment for me, the API simply sucks. It is essentially an extension of the extension API. It’s very limiting and it’s for this reason, some of the third party apps are lacking and not feeling polished. Also from a development point of view the simulator kept crashing, meaning I was having to upload the app to my iPhone each time. This became very time consuming and frustrating.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I am enjoying my Apple Watch and yes native apps are needed (but coming) to resolve some of the sluggish UI. The battery life is better than expected and security needs improving. Built-in apps are brilliant and I believe third party apps will get better as Apple become more open about developing on the Apple Watch. I look forward to future iterations of the OS and hope Apple don’t go down the route of crippling devices every few years with later iterations of the OS like they have done with previous generations of iPhones and iPads.&lt;/p&gt;
&lt;p&gt;I recommend buying an Apple Watch if you want a nice looking watch with more than just &lt;code class=&quot;language-text&quot;&gt;telling the time functionality&lt;/code&gt;.  The Apple Watch is not a replacement for your iPhone, its an enhancement to being constantly connected. If you are looking for a replacement device to your iPhone, don’t buy one. They both compliment each other.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Hybrid iOS development isn't over yet]]></title><description><![CDATA[To give you a bit of background, I have been working on an iOS application for a while now and I’ve got the majority of it written using…]]></description><link>https:/next.mintuz.com/2015/03/15/hybrid-ios-development-isnt-over-yet</link><guid isPermaLink="false">https:/next.mintuz.com/2015/03/15/hybrid-ios-development-isnt-over-yet</guid><pubDate>Sun, 15 Mar 2015 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;To give you a bit of background, I have been working on an iOS application for a while now and I’ve got the majority of it written using Node.js for the backend and Swift for the actual app.&lt;/p&gt;
&lt;p&gt;Now onto the problem that I encountered, originally I was going to create the UI using the native API but if you have done any iOS development you will know how much of a pain this can be, and how much it can slow you down. So I looked for alternatives.&lt;/p&gt;
&lt;p&gt;I know Cordova exists but I didn’t want to cut out the ability to write native code and the plugin system used in Cordova just wasn’t up to scratch. It can also suffer from performance issues which I will discuss below.&lt;/p&gt;
&lt;p&gt;I then watched the conference Facebook hosted about &lt;a href=&quot;https://code.facebook.com/videos/786462671439502/react-js-conf-2015-keynote-introducing-react-native-/&quot;&gt;React Native&lt;/a&gt; and I was/still am excited for this to be released but after a month of waiting I couldn’t wait any longer. I will probably port over to using React Native once it is released, being a massive JavaScript developer and a fan of React.JS, the ability to render native UI components seems to good of an opportunity to miss.&lt;/p&gt;
&lt;p&gt;So I looked to create my own Hybrid iOS application using swift for the bulk of my application and render any views with a cheeky UIWebView and pass data through. The problem with this is, a UIWebView has performance limitations because it does not have access to the Nitro JIT JavaScript engine present in the stock Safari app. Not having access to certain features meant my app would not feel like a native application and that just wasn’t acceptable. I wanted to provide a high quality app to all my users.&lt;/p&gt;
&lt;p&gt;I then remembered the WWDC2014 talk that introduced the WKWebView component. This little gem changes everything about how we should build hybrid applications. It has performance equivalent to Safari and hybrid apps will receive a notable performance increase just by switching to the new API.&lt;/p&gt;
&lt;p&gt;WKWebView has a refined API making it easier to bridge data between native code and JavaScript. Their are a few bugs worth noting though. First of all, you have to programmatically implement it, It is not supported using the StoryBoard. Secondly it cannot load a HTML file using .**loadRequest(url) **you have to load a HTML String, these issues have both been raised with Apple and hopefully they will get fixed in a later release.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[My 2014]]></title><description><![CDATA[I’m writing this post to remind me in the future how awesome my 2014 was and for a kick in the bum to make my 2015 as equally awesome…]]></description><link>https:/next.mintuz.com/2015/03/04/my-2014</link><guid isPermaLink="false">https:/next.mintuz.com/2015/03/04/my-2014</guid><pubDate>Wed, 04 Mar 2015 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;I’m writing this post to remind me in the future how awesome my 2014 was and for a kick in the bum to make my 2015 as equally awesome.&lt;/p&gt;
&lt;h2&gt;Career&lt;/h2&gt;
&lt;p&gt;Probably the most obvious achievements can be noticed within my career. Not only did I help deliver several new websites at Forepoint for some high profile clients, I also landed myself a job at the BBC working within the content discovery department as a web developer.&lt;/p&gt;
&lt;p&gt;I am loving every second of it (apart from the 2.5hr journey each way until I relocate).&lt;/p&gt;
&lt;p&gt;Each day something new is learnt which I felt at the beginning of the year I was not doing and was becoming a bit stale.&lt;/p&gt;
&lt;p&gt;I also got some time in the summer to rewrite my personal website which showcases some previous projects I’ve worked on and allows me to effectively post blogs. I guess I see this as an achievement because your own website tends to get overlooked whilst you are busy working on other projects.&lt;/p&gt;
&lt;h2&gt;Development&lt;/h2&gt;
&lt;p&gt;Becoming a better developer is always one of my top priorities and 2014 was a good year to let me expand my knowledge.&lt;/p&gt;
&lt;p&gt;I started developing iOS apps with Swift, the new language from Apple whilst still using Objective-C for some of my legacy projects. I currently have a few apps in development using Swift and I am hoping towards the middle of 2015 to launch these apps.&lt;/p&gt;
&lt;p&gt;I rebuilt my digital ocean server using Ansible after researching Chef and Puppet. Ansible just makes life easier and with Vagrant allows my development environment and my production environment to be exactly the same. I know you can do this with chef and puppet but ansible just worked without any agents and no fuss.&lt;/p&gt;
&lt;p&gt;2014 was also the year I stopped relying on jQuery for frontend JavaScript development and started to use React. Its still early days but loving it at the moment.&lt;/p&gt;
&lt;p&gt;Since starting at the BBC, I have been learning TDD and BDD. Whilst I still have a long way to go I believe I am making good progress learning the testing frameworks and what to test and why to test certain things.&lt;/p&gt;
&lt;p&gt;I also started developing Flexdd, a modular frontend framework giving you sensible defaults and allowing you to easily configure it to your liking. It also includes javascript goodies like sliders and faders. I aim for version 1.0 of Flexdd to be released sometime in 2015 probably towards the middle.&lt;/p&gt;
&lt;h2&gt;Personal life&lt;/h2&gt;
&lt;p&gt;2014 marked the year that myself and Chloe had been together a year and was the first time we had a holiday together. It may be a small thing and it may not even matter that we went on holiday together but it proved to me that I love her :)&lt;/p&gt;
&lt;p&gt;Since leaving university I’ve let my organisational skills slip and 2014 was the year I finally got my act together again. I am officially a list man now, I’ve got a list for everything and Chloe doesn’t realise it, but I’ve got her using a Kanban board ^__^ so I guess that’s an achievement.&lt;/p&gt;
&lt;p&gt;If you are reading this and you know me personally, you’ll know I’m not overly confident and hate speaking out or doing presentations, well 2014 was the year where I gained some confidence and did a presentation. I’ll be putting myself into more uncomfortable situations in 2015.&lt;/p&gt;
&lt;p&gt;Being a developer means sitting down for 7+ hours a day looking at a screen and whilst at the moment it might not be causing me problems I thought it would be a good idea to start looking after myself more. In the summer I managed to run 7 miles a day and recently started going to the gym. I plan to carry this on in 2015 and beyond.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;My 2014 was amazing and I’m hoping my 2015 will be as good with exciting new challenges like moving to manchester with Chloe, releasing a couple of apps and continuing to hit my personal goals.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[CSS First]]></title><description><![CDATA[Let me start by saying not every codebase I have worked on have had the issues I’m about to talk about and some projects were executed…]]></description><link>https:/next.mintuz.com/2014/12/10/css-first</link><guid isPermaLink="false">https:/next.mintuz.com/2014/12/10/css-first</guid><pubDate>Wed, 10 Dec 2014 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;Let me start by saying not every codebase I have worked on have had the issues I’m about to talk about and some projects were executed extremely well. This blog post is more of a general rant to the web community as a whole.&lt;/p&gt;
&lt;p&gt;Why is it that CSS is not treated as a first class citizen in projects? We spend hours optimising backend code and javascript frontend code but CSS is put to the side if it works and left for the next developer to pick up and fight with.&lt;/p&gt;
&lt;p&gt;CSS should be planned from the very start of development, from architecture planning to the naming of classes. However this is not the case and is left until the end, with no thought of the implications when doing X. I’ve seen comments like “if it works why does it matter” and “it’s just CSS” and “ugh CSS is hard”.&lt;/p&gt;
&lt;p&gt;Hopefully I am going to give a counter argument for each one of those points and actually change peoples attitudes towards CSS.&lt;/p&gt;
&lt;h2&gt;if it works why does it matter&lt;/h2&gt;
&lt;p&gt;I have worked on a project in the past that “just worked” but a major bit of development needed to happen which meant some of the CSS needed refactoring. It had a bunch of hacks in it that worked fine for that specific scenario but as soon as we started altering properties, the code fell on its arse. It probably wasn’t the developers fault these hacks were put in place. He or she had a deadline to meet and I am assuming these hacks were for a quick fix.&lt;/p&gt;
&lt;p&gt;The problem however is that they did not think about the implications for future developers, our deadline was met but we had to cut out certain features because we spent a lot of the time fixing code that was previously written. If time was spent planning the CSS those hacks probably wouldn’t have existed, their code would have been cleaner and our time wouldn’t have been wasted refactoring the code. So if the code isn’t as great as it could be but works, it matters because it saves the next developer losing their hair over a crappy hack.&lt;/p&gt;
&lt;h2&gt;CSS is hard&lt;/h2&gt;
&lt;p&gt;Now onto the other point that “CSS is hard”. CSS isn’t hard at all, we as developers make it harder by over complicating things and introducing things which at first seem like a good idea but actually turn out to be a massive pain to fix. If you find it hard, thats fine ask for help but don’t make it harder for yourself by over complicating it. keep things simple.&lt;/p&gt;
&lt;h2&gt;It’s just CSS&lt;/h2&gt;
&lt;p&gt;The last issue i’d like to raise is the “It’s just CSS”, this to me is screaming you are a arrogant b***ard and you don’t think its important. Yea great your backend code wizardry can process an excel spreadsheet in a millisecond and cook me a pop tart but if the browser is dancing round drunkenly trying to render the page you decided to hack together then your hard work is gone to waste right? If you don’t like CSS because “Its just CSS” then don’t do it, let someone else do it because they will do a better job of it than you. There are things I don’t like about development and I try to avoid those tasks, not because I can’t do it but because I don’t like doing them so I feel as if my effort would not be as high causing my quality of work to decrease.&lt;/p&gt;
&lt;p&gt;Hopefully I’ve not pissed anyone of with this rant but I thought this needed to be said. CSS is a first class citizen so start treating it like one.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[New start]]></title><description><![CDATA[Starting next Monday I will be joining the BBC as a web developer in the content discovery department, meaning I will be leaving  Forepoint…]]></description><link>https:/next.mintuz.com/2014/10/06/new-start</link><guid isPermaLink="false">https:/next.mintuz.com/2014/10/06/new-start</guid><pubDate>Mon, 06 Oct 2014 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;Starting next Monday I will be joining the BBC as a web developer in the content discovery department, meaning I will be leaving &lt;a href=&quot;http://forepoint.co.uk&quot;&gt;Forepoint&lt;/a&gt; on Friday after two years of being apart of the web team. I would like to thank &lt;a href=&quot;http://forepoint.co.uk&quot;&gt;Forepoint&lt;/a&gt; for making me feel apart of the team from the very start and some people will be greatly missed. Without &lt;a href=&quot;http://forepoint.co.uk&quot;&gt;Forepoint&lt;/a&gt; taking a chance with me, my career could be very different right now and I am greatful for having the chance to follow my passion.&lt;/p&gt;
&lt;p&gt;I have enjoyed working on various websites within the nuclear, defence and public sectors including projects like &lt;a href=&quot;http://www.derwentsidehomes.co.uk&quot;&gt;derwentsidehomes&lt;/a&gt;, &lt;a href=&quot;http://magnoxsites.co.uk&quot;&gt;Magnox ltd&lt;/a&gt;, &lt;a href=&quot;http://s4bmanchester.co.uk&quot;&gt;s4bmanchester&lt;/a&gt; and &lt;a href=&quot;http://moto-way.com&quot;&gt;Moto&lt;/a&gt; where I have been given the chance to learn and develop my skills as a developer and more importantly a person.&lt;/p&gt;
&lt;p&gt;Forepoint are also recruiting for new web developers so if you are interested, be sure to visit the &lt;a href=&quot;http://forepoint.co.uk/careers/&quot;&gt;careers section&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Nginx Reverse Proxy with Apache 2 and Puma]]></title><description><![CDATA[I decided to alter my web server setup after realising a standard Apache 2 install comes with too much overhead whilst serving out static…]]></description><link>https:/next.mintuz.com/2013/07/28/nginx-reverse-proxy-with-apache-2-and-puma</link><guid isPermaLink="false">https:/next.mintuz.com/2013/07/28/nginx-reverse-proxy-with-apache-2-and-puma</guid><pubDate>Sun, 28 Jul 2013 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;I decided to alter my web server setup after realising a standard Apache 2 install comes with too much overhead whilst serving out static content. At the same time I thought it would be a good opportunity to look into different methods of serving web applications written in ruby, primarily Rails and Sinatra. Originally my web server was running Apache2 with libapache2-mod-php5 and mysql. Nothing special about it, infact it was pretty basic. For serving out ruby applications I used &lt;a href=&quot;https://www.phusionpassenger.com/&quot;&gt;mod_passenger&lt;/a&gt; developed by Phusion.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Benchmark&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;using Apache benchmark for 5 seconds and sending 100 requests my old setup had a mean average of 0.40 requests per second across 10 tests. After altering my setup to what will be discussed further on in this blog post, the mean average requests per second were increased to 8.97. That is a drastic increase and you can really tell the difference especially with loading large images.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;The New Setup&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;I have setup my web server to use Apache 2 and Puma with Nginx as a reverse proxy listening on port 80. This allows you to serve out ruby based applications and PHP based websites driven by content management systems such as Wordpress.&lt;/p&gt;
&lt;h3&gt;Setting up Nginx with Apache 2&lt;/h3&gt;
&lt;p&gt;Lets get started, First we will setup Nginx to be the Reverse Proxy in front of Apache 2, I am using Ubuntu 12.04 so I use aptitude as my package manager.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; nginx&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The first thing to do is alter your default site configuration located in** /etc/nginx/sites-availble/** to look like the configuration below. This is used to serve out PHP based websites mainly running Wordpress. Thanks to &lt;a href=&quot;http://www.applicious.co/2013/06/upgraded-to-nginx/&quot;&gt;@iceicetimmy&lt;/a&gt; for providing the basis of this config. [work] I have made a few alterations for my scenario such as adding default to the listen directive, doing this forces the server block to run as the default configuration. Without it, the Puma server block further down would override it causing every website to redirect to your ruby applications. I also removed the &lt;strong&gt;rewrite ^(.*) $scheme&lt;/strong&gt; line because it simply breaks.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;server {

        listen 80 default;
    index index.php;
        rewrite /wp-admin$ $scheme://$host$uri/ permanent;

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        location ~ /\. {
                deny all;
        }

        location ~* /(?:uploads|files)/.*\.php$ {
                deny all;
        }

        location / {

            proxy_pass http://127.0.0.1:8080;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header Host $host;

    }

}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The next step is to configure Apache 2 to listen on port 8080 instead of the standard 80. Change &lt;strong&gt;/etc/apache2/ports.conf&lt;/strong&gt; to look similar to this.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# If you just change the port or add more ports here, you will likely also
# have to change the VirtualHost statement in
# /etc/apache2/sites-enabled/000-default
# This is also true if you have upgraded from before 2.2.9-3 (i.e. from
# Debian etch). See /usr/share/doc/apache2.2-common/NEWS.Debian.gz and
# README.Debian.gz

NameVirtualHost 127.0.0.1:8080
Listen 8080

# If you add NameVirtualHost *:443 here, you will also have to change
# the VirtualHost statement in /etc/apache2/sites-available/default-ssl
# to
# Server Name Indication for SSL named virtual hosts is currently not
# supported by MSIE on Windows XP.
Listen 443&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Within your &lt;strong&gt;/etc/apache2/apache2.conf&lt;/strong&gt; towards the bottom of the configuration file add&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;NameVirtualHost *:8080&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;For each virtual host you need to alter your VirtualHost directives to listen on &lt;strong&gt;127.0.0.1:8080&lt;/strong&gt; Do a quick restart of the Apache2 and the Nginx Services so the changes take effect.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; /etc/init.d/apache2 restart
$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; nginx -s reload&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Hopefully things are still working, if your browser is getting stuck in a redirect loop, try restarting your browser as it caches the Headers.&lt;/p&gt;
&lt;h3&gt;Setting Up Puma&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gem &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; puma&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The next thing to do is create a site configuration file in Nginx which will redirect requests to the Puma process. Place it in the &lt;strong&gt;/etc/nginx/sites-available/&lt;/strong&gt; directory and create a symbolic link in the &lt;strong&gt;/etc/nginx/sites-enabled&lt;/strong&gt; directory.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;touch&lt;/span&gt; /etc/nginx/sites-available/rails-app.com
$ &lt;span class=&quot;token function&quot;&gt;ln&lt;/span&gt; -s /etc/nginx/sites-available/rails-app.com /etc/nginx/sites-enabled/rails-app.com&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Copy the configuration file below into the file we just created&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;upstream rails-app.com { server 127.0.0.1:9292; }

server {

    listen 80;

    server_name rails-app.com www.rails-app.com;
    try_files $uri/index.html $uri @rails-app.com;

    location @rails-app.com {

        proxy_redirect off;
        proxy_pass http://rails-app.com;
        proxy_set_header Host rails-app.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Navigate to the root of where your Rails/Sinatra application will be based and run the following command, This command essentially runs Puma as a daemon and forces it to bind to 127.0.0.1:9292. It also creates a .pid file to make it easier to restart after you make changes to your web application.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;RAILS_ENV&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;production bundle &lt;span class=&quot;token function&quot;&gt;exec&lt;/span&gt; puma -e production -b tcp://127.0.0.1:9292 -d --pidfile /var/run/puma.pid&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Restart Nginx so the changes occur and that should be it, everything should be working, with PHP based websites and Ruby based websites getting served through Nginx. Pretty cool huh? To restart the Puma process run the following command&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;kill&lt;/span&gt; -s SIGUSR2 &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; /var/run/puma.pid&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;</content:encoded></item><item><title><![CDATA[Securing Wordpress]]></title><description><![CDATA[Let me start by saying Wordpress is an  extremely secure platform  and is in fact exploited due to poorly written 3rd party plugins and…]]></description><link>https:/next.mintuz.com/2013/04/21/how-to-secure-wordpress</link><guid isPermaLink="false">https:/next.mintuz.com/2013/04/21/how-to-secure-wordpress</guid><pubDate>Sun, 21 Apr 2013 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;Let me start by saying Wordpress is an &lt;strong&gt;extremely secure platform&lt;/strong&gt; and is in fact exploited due to poorly written 3rd party plugins and uneducated Wordpress users. This is a brief overview of the things you can do to detect issues with your Wordpress site and how to secure it.&lt;/p&gt;
&lt;p&gt;There is a large spread attack happening across the Internet aimed towards Wordpress at the moment (14/04/2013). The series of online attacks designed to break into poorly-secured &lt;strong&gt;WordPress&lt;/strong&gt; blogs is fuelling the growth of an unusually powerful botnet currently made up of more than 90,000 Web servers. This attack is using a typical &lt;strong&gt;brute force attack against passwords&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Every attack against a computer system starts with reconnaissance which is the gathering of as much information as possible against the target. In terms of &lt;strong&gt;Wordpress security&lt;/strong&gt;, Information from the Whois database and data exposed fron the website itself is extremely useful.&lt;/p&gt;
&lt;p&gt;Tools like &lt;a href=&quot;http://wpscan.org/&quot;&gt;wp-scan&lt;/a&gt; allow you to find out what plugins are running on the Wordpress installation and the names of the users on that system. With this information you have already lost half the battle. I urge you to download and install wp-scan. It’s simple to use but extremely powerful. It alerts you of any vulnerable plugins and if this occurs, you should instantly disable those plugins. The chances are it will also display one or more usernames, if you have your username as admin, please open a new tab, login to your Wordpress site and rename your admin user then come back and carry on reading.&lt;/p&gt;
&lt;p&gt;If an attacker has a good password dictionary and you have a weak password, congratulations your website could be hacked. For password requirements you should read the &lt;a href=&quot;http://en.support.wordpress.com/selecting-a-strong-password/&quot;&gt;security requirements&lt;/a&gt; specified on the WordPress website. You should also &lt;a href=&quot;http://codex.wordpress.org/Hardening_WordPress&quot;&gt;restrict access&lt;/a&gt; to the wp-admin section of your website to only allow access from specific IP addresses. If you want to go to extreme lengths you can also take advantage of a&lt;a href=&quot;https://www.duosecurity.com/product&quot;&gt; third-party plugin from Duo Security&lt;/a&gt;, which enables one-time login codes sent via text message.&lt;/p&gt;
&lt;p&gt;Now the way this attack works is from scanning domains for information such as strings like wp-content and wp-admin. If the bot finds a website with these strings present, it will simply spam the wp-login.php page with requests using the usernames found from tools like wp-scan and a password dictionary possibly using words from the website itself.&lt;/p&gt;
&lt;p&gt;Tools like &lt;a href=&quot;http://www.thc.org/thc-hydra/&quot;&gt;xHydra&lt;/a&gt; allow such attacks to be carried out. **wp-scan and xHyrdra together are bad news for Wordpress sites. **To help reduce the risk of these tools, I urge you to download the wp-security plugin. You can configure the plugin to block an IP address from accessing your website if that IP address has multiple incorrect login attempts. It also allows you to rename the wp-content and wp-admin parts of the URL.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Why WEP Sucks]]></title><description><![CDATA[Recently I have noticed several WEP based wireless networks around my area with the majority of them using BT Home Hubs. This angers me, it…]]></description><link>https:/next.mintuz.com/2013/04/14/why-wep-sucks</link><guid isPermaLink="false">https:/next.mintuz.com/2013/04/14/why-wep-sucks</guid><pubDate>Sun, 14 Apr 2013 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/04/Untitled.png&quot; alt=&quot;WEP Security&quot;&gt;&lt;/p&gt;
&lt;p&gt;Recently I have noticed several WEP based wireless networks around my area with the majority of them using BT Home Hubs. This angers me, it has been known for several years WEP is insecure and allows young kids with basic knowledge of computing to hack your network. Here is why…&lt;/p&gt;
&lt;p&gt;Two main versions of WEP exist, a 64bit key version and a 128bit key version. There is also a 256bit key but not all vendors support this version. All versions use an Initialisation vector of 24bits leaving a 40bit key, a 104bit key or a 232bit key.&lt;/p&gt;
&lt;p&gt;WEP works by the wireless client sending an authentication request to the access point, the AP then responds with an authentication response including a challenge text in plain format. The wireless client then encrypts the challenge text with the WEP key and transmits the encrypted data to the AP, the AP then decrypts the encrypted message and if the transmitted message text matches the challenge text of the AP authentication is successful otherwise access is denied.&lt;/p&gt;
&lt;p&gt;WEP can be cracked, by using freely available tools such as &lt;strong&gt;aircrack-ng&lt;/strong&gt;. One of the main weaknesses of WEP is that the key used for authentication is also used for encrypting data on the wireless network. The same encryption key is used for each frame sent across the wireless link. By sniffing packets on the wireless network, it is possible to work out the key, which encrypted the data, and once this is known, it will also be possible to be authorised on the wireless network since it uses the same key.&lt;/p&gt;
&lt;p&gt;WEP uses RC4 as its encryption algorithm. It is a stream cipher and is weak because of the initialization vector length. The initialization vector is used to randomize the key, which is then used to encrypt the data. With a stream cipher the key used to encrypt traffic should never be used twice but because the IV is short, there is a possibility that an IV collision will occur.  24bits are used for the IV which gives you a possible 16.7 million possibilities, on a network with large amounts of traffic, this value can be met very quickly therefore the IV values will have to be reused.&lt;/p&gt;
&lt;p&gt;The IV values are also sent in clear text making it much easier to determine the key if the IV is used multiple times.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Get in touch]]></title><description><![CDATA[I would love you to get in touch with me, I do not actively place my email address in the wild, so you can get in touch by  tweeting me  or…]]></description><link>https:/next.mintuz.com/get-in-touch</link><guid isPermaLink="false">https:/next.mintuz.com/get-in-touch</guid><pubDate>Sun, 03 Feb 2013 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;I would love you to get in touch with me, I do not actively place my email address in the wild, so you can get in touch by &lt;a href=&quot;https://twitter.com/mintuz&quot;&gt;tweeting me&lt;/a&gt; or by visiting my &lt;a href=&quot;https://www.linkedin.com/in/adambulmer&quot;&gt;Linkedin&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Career opportunity &lt;strong&gt;&lt;a href=&quot;https://www.linkedin.com/in/adambulmer&quot;&gt;Linkedin&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&quot;https://twitter.com/mintuz&quot;&gt;tweet me&lt;/a&gt;&lt;/strong&gt; and we can DM.&lt;/li&gt;
&lt;li&gt;Development question &lt;strong&gt;&lt;a href=&quot;https://twitter.com/mintuz&quot;&gt;tweet me&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Question about an open source project I work on &lt;strong&gt;&lt;a href=&quot;https://github.com/mintuz&quot;&gt;Github&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Domain you wish to buy from me &lt;strong&gt;&lt;a href=&quot;https://twitter.com/mintuz&quot;&gt;tweet me&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please no recruitment agencies.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[New Adventures In Web Design 2013]]></title><description><![CDATA[I should have written this blog post a week ago but with how busy I am currently, I have not had time. A week ago I had the privilege of…]]></description><link>https:/next.mintuz.com/2013/02/03/new-adventures-in-web-design-2013</link><guid isPermaLink="false">https:/next.mintuz.com/2013/02/03/new-adventures-in-web-design-2013</guid><pubDate>Sun, 03 Feb 2013 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;http://www.mintuz.com/wp-content/uploads/2013/02/2013-01-24-09.31.19.jpg&quot; alt=&quot;2013-01-24 09.31.19&quot;&gt;&lt;/p&gt;
&lt;p&gt;I should have written this blog post a week ago but with how busy I am currently, I have not had time.&lt;/p&gt;
&lt;p&gt;A week ago I had the privilege of attending the New Adventures in Web Design Conference with &lt;a href=&quot;http://www.forepoint.co.uk&quot;&gt;Forepoint&lt;/a&gt;, This was my first ever conference and hopefully not my last. If you cannot be bothered to read the rest of this post, Let me sum up the conference in one word. Inspiring.&lt;/p&gt;
&lt;p&gt;It was an interesting angle on how I perceive Web Development, as the conference is aimed more towards designers I got to hear problems designers encounter all the time. The theme of the day seemed to revolve heavily around process, about the way that we work and it highlighted some key problems with how I currently work. &lt;/p&gt;
&lt;p&gt;I enjoyed all the talks. A couple of talks I found particularly useful were the talks by &lt;strong&gt;Jessica Hische&lt;/strong&gt; and **Wayne Hemingway. **What I learnt from Jessica is that I should be Procrastiworking to stay motivated and get the tasks done. Wayne spoke about taking risks and how that can have a positive outcome on business. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Seb&lt;/strong&gt; was probably my favourite speaker and was a great start to the afternoon. He certainly got everybody out of their food comas. His talk was pure genius with live coding on a Commodore 64 and then demonstrated some JavaScript Prettyness. Seb had the whole hall laughing. I found his talk the most inspiring and I really want to get dirty with pixel particle work. &lt;/p&gt;
&lt;p&gt;I should also probably mention that the Forepoint bowling team (including &lt;a href=&quot;https://twitter.com/eskins&quot;&gt;Richard Eskins&lt;/a&gt;) won the bowling night hosted by &lt;a href=&quot;http://erskinedesign.com/&quot;&gt;Erskine&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.mintuz.com/wp-content/uploads/2013/02/252707_10151203693456487_1694166284_n-1.jpg&quot; alt=&quot;252707_10151203693456487_1694166284_n (1)&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here are some pictures, enjoy.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.mintuz.com/wp-content/uploads/2013/02/cupcakes.png&quot; alt=&quot;cupcakes&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.mintuz.com/wp-content/uploads/2013/02/me.png&quot; alt=&quot;me&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.mintuz.com/wp-content/uploads/2013/02/goodies.png&quot; alt=&quot;goodies&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.mintuz.com/wp-content/uploads/2013/02/firstones.png&quot; alt=&quot;firstones&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.mintuz.com/wp-content/uploads/2013/02/cup.png&quot; alt=&quot;cup&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.mintuz.com/wp-content/uploads/2013/02/andrew.png&quot; alt=&quot;andrew&quot;&gt;&lt;/p&gt;</content:encoded></item></channel></rss>